openapi: 3.0.0
info:
  title: GitHub API
  version: 2022-11-28
  description: >
    GitHub's REST API helps you manage your GitHub resources like repositories,
    users, and organizations. You can automate tasks, integrate with other
    systems, and extend GitHub's features to fit your development needs.
  contact:
    name: GitHub API Support
    url: https://support.github.com/
    email: api-support@github.com
servers:
  - url: https://api.github.com
    description: GitHub REST API server
paths:
  /orgs/{org}/repos:
    get:
      summary: Get Organization Repositories
      description: This endpoint retrieves a list of all repositories belonging to a specific GitHub organization.
      parameters:
        - $ref: '#/components/parameters/OrgParam'
      responses:
        '200':
          description: A list of repositories for the specified organization.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repository'
              examples:
                example1:
                  summary: Example repository list
                  value:
                    - id: 15929
                      node_id: MDEwOlJlcG9zaXRvcnkxNTkyOQ==
                      name: albino
                      full_name: github/albino
                      private: false
                      owner:
                        login: github
                        id: 9919
                        node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
                        type: Organization
                        user_view_type: public
                        site_admin: false
                    - id: 3222
                      node_id: MDEwOlJlcG9zaXRvcnkzMjIy
                      name: media
                      full_name: github/media
                      private: false
                      owner:
                        login: github
                        id: 9919
                        node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
                        type: Organization
                        user_view_type: public
                        site_admin: false
        '404':
          description: Organization not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Organization not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Internal server error.
    post:
      summary: Create Repository in Organization
      description: Use this endpoint to create a brand new repository within a specified organization on GitHub.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OrgParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRepository'
            examples:
              example1:
                summary: Example request to create a repository
                value:
                  name: Ehizzymonie-programmer
                  description: API integration project to document Ehizzymonie programmer
                  homepage: https://github.com/myfashionhub/Ehizzy-programmer
                  private: false
                  has_issues: true
                  has_projects: true
                  has_wiki: false
      responses:
        '201':
          description: Repository created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
              example:
                id: 1011333072
                node_id: R_kgDOPEe30A
                name: Ehizzymonie-programmer
                full_name: myfashionhub1234/Ehizzymonie-programmer
                private: false
                owner:
                  login: myfashionhub1234
                  id: 218431065
                  node_id: O_kgDODQT-WQ
                  type: Organization
                  user_view_type: public
        '400':
          description: Bad request. The input was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Invalid input data.
        '401':
          description: Unauthorized. Authentication required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Unauthorized access.
        '404':
          description: Organization not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Organization not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Internal server error.
  /repos/{owner}/{repo}:
    get:
      summary: Get Repository Details
      description: This endpoint fetches detailed information about a specific repository on GitHub.
      parameters:
        - $ref: '#/components/parameters/OwnerParam'
        - $ref: '#/components/parameters/RepoParam'
      responses:
        '200':
          description: Repository details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
              example:
                id: 1010657333
                node_id: R_kgDOPD1oNQ
                name: Ycee-tech-writer
                full_name: myfashionhub1234/Ycee-tech-writer
                private: false
                owner:
                  login: myfashionhub1234
                  id: 218431065
                  node_id: O_kgDODQT-WQ
                  type: Organization
                  user_view_type: public
                  site_admin: false
        '404':
          description: Repository not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Repository not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Internal server error.
    patch:
      summary: Update Repository
      description: Use this endpoint to modify the details of an existing repository on GitHub.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/OwnerParam'
        - $ref: '#/components/parameters/RepoParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRepository'
            examples:
              example1:
                summary: Example request to update repository name
                value:
                  name: Zolando-fashion
                  description: This is an updated description for the repository.
                  private: true
      responses:
        '200':
          description: Repository updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
              example:
                id: 1011387773
                node_id: R_kgDOPEiNfQ
                name: Zolando-fashion
                full_name: myfashionhub1234/Zolando-fashion
                private: false
                owner:
                  login: myfashionhub1234
                  id: 218431065
                  node_id: O_kgDODQT-WQ
                  type: Organization
                  user_view_type: public
        '400':
          description: Bad request. The input was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Invalid input data.
        '401':
          description: Unauthorized. Authentication required.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Unauthorized access.
        '404':
          description: Repository not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Repository not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Internal server error.
  /users:
    get:
      summary: Get All Users
      description: This endpoint returns a comprehensive list of all publicly available users on GitHub.
      responses:
        '200':
          description: A list of users retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
              examples:
                example1:
                  summary: Example list of users
                  value:
                    - login: mojombo
                      id: 1
                      node_id: MDQ6VXNlcjE=
                      type: User
                      user_view_type: public
                    - login: defunkt
                      id: 2
                      node_id: MDQ6VXNlcjI=
                      type: User
                      user_view_type: public
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Internal server error.
  /users/{username}:
    get:
      summary: Get User Profile
      description: Use this endpoint to retrieve the public profile information for any specific GitHub user.
      parameters:
        - $ref: '#/components/parameters/UsernameParam'
      responses:
        '200':
          description: User profile retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Username'
              example:
                login: ycee002
                id: 199307583
                node_id: U_kgDOC-ExPw
                created_at: '2025-02-14T22:55:02Z'
                updated_at: '2025-06-10T20:13:54Z'
        '404':
          description: User not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: User not found.
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Internal server error.
  /rate_limit:
    get:
      summary: Get API Rate Limit Status
      description: This endpoint shows your current API rate limit status, including how many requests you have remaining and when the limit resets.
      responses:
        '200':
          description: Rate limit status retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimit'
              example:
                resources:
                  core:
                    limit: 60
                    remaining: 59
                    reset: 1751319801
                    used: 1
                    resource: core
                  integration_manifest:
                    limit: 5000
                    remaining: 5000
                    reset: 1751320567
                    used: 0
                    resource: integration_manifest
                  search:
                    limit: 10
                    remaining: 10
                    reset: 1751317027
                    used: 0
                    resource: search
                rate:
                  limit: 60
                  remaining: 59
                  reset: 1751319801
                  used: 1
                  resource: core
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: Internal server error.
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Enter your Bearer token in the format **Bearer <token>**
  parameters:
    OrgParam:
      name: org
      in: path
      required: true
      description: The name of the organization on GitHub.
      schema:
        type: string
        example: github
    OwnerParam:
      name: owner
      in: path
      required: true
      description: The GitHub username or organization name that owns the repository.
      schema:
        type: string
        example: myfashionhub1234
    RepoParam:
      name: repo
      in: path
      required: true
      description: The name of the repository you want to access.
      schema:
        type: string
        example: Ycee-tech-writer
    UsernameParam:
      name: username
      in: path
      required: true
      description: The specific GitHub username to retrieve information for.
      schema:
        type: string
        example: Ycee002
  schemas:
    Repository:
      type: object
      properties:
        id:
          type: integer
          description: The unique identification number of the repository.
        node_id:
          type: string
          description: GitHub's global ID for the repository (used in GraphQL).
        name:
          type: string
          description: The name of the repository.
        full_name:
          type: string
          description: The complete name of the repository, including the owner's username (e.g., `owner/repo-name`).
        private:
          type: boolean
          description: Indicates whether the repository is private (`true`) or public (`false`).
        owner:
          type: object
          properties:
            login:
              type: string
              description: The username of the repository owner.
            id:
              type: integer
              description: The unique identification number of the owner.
            node_id:
              type: string
              description: GitHub's global ID for the owner.
            type:
              type: string
              description: The type of the owner (e.g., `User`, `Organization`).
            user_view_type:
              type: string
              description: The visibility type of the user profile (e.g., `public`).
            site_admin:
              type: boolean
              description: '`true` if the user is a GitHub site administrator, `false` otherwise.'
          required:
            - login
            - id
            - node_id
            - type
            - user_view_type
      required:
        - id
        - name
        - full_name
        - private
        - owner
    NewRepository:
      type: object
      properties:
        name:
          type: string
          description: The desired name for the new repository.
        description:
          type: string
          description: A brief summary or description of the repository.
        homepage:
          type: string
          description: A URL for a website related to the repository.
        private:
          type: boolean
          description: Set to `true` to make the repository private, `false` for public. Defaults to `false`.
        has_issues:
          type: boolean
          description: Set to `true` to enable the issues feature for the repository. Defaults to `true`.
        has_projects:
          type: boolean
          description: Set to `true` to enable the projects feature for the repository. Defaults to `true`.
        has_wiki:
          type: boolean
          description: Set to `true` to enable the wiki feature for the repository. Defaults to `true`.
      required:
        - name
    UpdateRepository:
      type: object
      properties:
        name:
          type: string
          description: The new name you want to give the repository.
        description:
          type: string
          description: A new description for the repository.
        private:
          type: boolean
          description: Change to `true` to make the repository private, or `false` for public.
    Users:
      type: object
      properties:
        login:
          type: string
          description: The user's GitHub username.
        id:
          type: integer
          description: The unique identification number for the user account.
        node_id:
          type: string
          description: GitHub's global ID for the user.
        type:
          type: string
          description: The type of account (e.g., `User`, `Organization`).
        user_view_type:
          type: string
          description: The visibility of the user's profile (e.g., `public`).
        created_at:
          type: string
          format: date-time
          description: The date and time (in ISO 8601 format) when the user account was created.
        updated_at:
          type: string
          format: date-time
          description: The date and time (in ISO 8601 format) when the user account was last updated.
      required:
        - login
        - id
        - node_id
        - type
        - user_view_type
    Username:
      type: object
      properties:
        login:
          type: string
          description: The user's GitHub username.
        id:
          type: integer
          description: The unique identification number for the user account.
        node_id:
          type: string
          description: GitHub's global ID for the user.
        created_at:
          type: string
          format: date-time
          description: The date and time (in ISO 8601 format) when the user account was created.
        updated_at:
          type: string
          format: date-time
          description: The date and time (in ISO 8601 format) when the user account was last updated.
      required:
        - login
        - id
        - node_id
        - created_at
        - updated_at
    RateLimit:
      type: object
      properties:
        resources:
          type: object
          properties:
            core:
              type: object
              properties:
                limit:
                  type: integer
                remaining:
                  type: integer
                reset:
                  type: integer
                  description: The UTC epoch seconds when the rate limit for this resource will reset.
                used:
                  type: integer
                resource:
                  type: string
            integration_manifest:
              type: object
              properties:
                limit:
                  type: integer
                remaining:
                  type: integer
                reset:
                  type: integer
                used:
                  type: integer
                resource:
                  type: string
            search:
              type: object
              properties:
                limit:
                  type: integer
                remaining:
                  type: integer
                reset:
                  type: integer
                used:
                  type: integer
                resource:
                  type: string
        rate:
          type: object
          properties:
            limit:
              type: integer
            remaining:
              type: integer
            reset:
              type: integer
              description: The UTC epoch seconds when the overall rate limit will reset.
            used:
              type: integer
            resource:
              type: string
    Error:
      type: object
      properties:
        error:
          type: string
          description: A clear, easy-to-understand error message.
      required:
        - error
