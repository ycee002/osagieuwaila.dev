openapi: 3.0.3
info:
  title: The Movie Database (TMDB) API
  version: 3.0.0 
  description: >
    Welcome to version 3 of The Movie Database (TMDB) API. This is where you will find
    the definitive list of currently available methods for our movie, TV, actor, and image API.
  contact:
    name: The Movie Database Support
    url: https://www.themoviedb.org/talk

servers:
  - url: https://api.themoviedb.org/3
    description: Production server

paths:
  /movie/popular:
    get:
      summary: Get Popular Movies
      description: Retrieve a list of movies sorted by popularity.
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/PageParameter'
      responses:
        '200':
          description: Successful response with a list of popular movies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movies'
              examples:
                MoviesExample:
                  $ref: '#/components/examples/MoviesExample'
        '401':
          description: Unauthorized. Invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample' 
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample' 

  /movie/top_rated:
    get:
      summary: Get Top Rated Movies
      description: Retrieve a list of movies sorted by their rating.
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/PageParameter'
      responses:
        '200':
          description: Successful response with a list of top rated movies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movies'
              examples:
                MoviesExample:
                  $ref: '#/components/examples/MoviesExample'
        '401':
          description: Unauthorized. Invalid or missing API key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample'

  /movie/upcoming:
    get:
      summary: Get Upcoming Movies
      description: Retrieve a list of movies that are scheduled to be released soon.
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/PageParameter'
      responses:
        '200':
          description: Successful response with a list of upcoming movies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpcomingMovies'
              examples:
                UpcomingMoviesExample: 
                  $ref: '#/components/examples/UpcomingMoviesExample'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample'

  /movie/{movie_id}/changes:
    get:
      summary: Get Movie Changes
      description: Retrieve the recent changes made to a specific movie.
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/MovieIdPathParameter'
      responses:
        '200':
          description: Successful response with movie changes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieChanges'
              examples:
                MovieChangesExample: 
                  $ref: '#/components/examples/MovieChangesExample'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample'
        '404':
          description: Movie not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                MovieNotFound:
                  $ref: '#/components/examples/ErrorExample'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample'

  /movie/{movie_id}:
    get:
      summary: Get Movie Details
      description: Retrieve the top-level details of a movie by its ID.
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/MovieIdPathParameter'
      responses:
        '200':
          description: Successful response with movie details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieDetails'
              examples:
                MovieDetailsExample: 
                  $ref: '#/components/examples/MovieDetailsExample'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample'
        '404':
          description: Movie not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                MovieNotFound:
                  $ref: '#/components/examples/ErrorExample'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample'

  /movie/{movie_id}/lists:
    get:
      summary: Get Lists Containing Movie
      description: Retrieve the lists that a movie has been added to.
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/MovieIdPathParameter'
        - $ref: '#/components/parameters/PageParameter'
      responses:
        '200':
          description: Successful response with lists containing the movie.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieLists'
              examples:
                MovieListsExample:
                  $ref: '#/components/examples/MovieListsExample'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample'
        '404':
          description: Movie not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                MovieNotFound:
                  $ref: '#/components/examples/ErrorExample'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample'

  /movie/latest:
    get:
      summary: Get Latest Movie
      description: Retrieve the newest movie added to TMDB.
      security:
        - api_key: []
      responses:
        '200':
          description: Successful response with details of the latest movie.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LatestMovie'
              examples:
                LatestMovieExample:
                  $ref: '#/components/examples/LatestMovieExample'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample'

  /movie/{movie_id}/rating:
    post:
      summary: Rate a Movie
      description: Submit a rating for a movie and save it to your rated list.
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/MovieIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: number
                  example: 8
            examples: 
              RatingRequest:
                $ref: '#/components/examples/RatingRequestExample'
      responses:
        '201':
          description: Movie rated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 12
                  status_message:
                    type: string
                    example: "The item/record was updated successfully."
              examples: 
                RatingSuccessResponse:
                  $ref: '#/components/examples/RatingSuccessResponseExample'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorExample'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample'
        '404':
          description: Movie not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                MovieNotFound:
                  $ref: '#/components/examples/ErrorExample'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample'

  /list/{list_id}/item_status:
    get:
      summary: Check if Item Exists in List
      description: Check whether a specific item has already been added to a list.
      security:
        - api_key: []
      parameters:
        - $ref: '#/components/parameters/ListIdPathParameter'
      responses:
        '200':
          description: Successful response indicating whether the item is present.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "8542348"
                  item_present:
                    type: boolean
                    example: false
              examples: 
                ItemStatusResponse:
                  $ref: '#/components/examples/ItemStatusResponseExample'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample'
        '404':
          description: List not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ListNotFound:
                  $ref: '#/components/examples/ErrorExample'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample'

  /list:
    post:
      summary: Create a New List
      description: Create a new list in your TMDB account to organise your favourite movies and TV shows.
      security:
        - api_key: []
        - session_id: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "My Favourite Shows"
                iso_639_1:
                  type: string
                  example: "en"
                description:
                  type: string
                  example: "This is a list of my favourite TV shows and movies."
            examples: 
              CreateListRequest:
                $ref: '#/components/examples/CreateListRequestExample'
      responses:
        '201':
          description: List created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 1
                  status_message:
                    type: string
                    example: "Success."
                  list_id:
                    type: integer
                    example: 8542396
              examples: 
                CreateListSuccessResponse:
                  $ref: '#/components/examples/CreateListSuccessResponseExample'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorExample'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample'

  /list/{list_id}/add_item:
    post:
      summary: Add Movie to List
      description: Add a movie to an existing list.
      security:
        - api_key: []
        - session_id: []
      parameters:
        - $ref: '#/components/parameters/ListIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                media_id:
                  type: integer
                  example: 551
            examples: 
              AddItemRequest:
                $ref: '#/components/examples/AddItemRequestExample'
      responses:
        '201':
          description: Movie added to list successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  status_code:
                    type: integer
                    example: 12
                  status_message:
                    type: string
                    example: "The item/record was updated successfully."
              examples:
                AddItemSuccessResponse:
                  $ref: '#/components/examples/AddItemSuccessResponseExample'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                BadRequest:
                  $ref: '#/components/examples/ErrorExample'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                UnauthorizedError:
                  $ref: '#/components/examples/ErrorExample'
        '404':
          description: List not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                ListNotFound:
                  $ref: '#/components/examples/ErrorExample'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                InternalServerError:
                  $ref: '#/components/examples/ErrorExample'
components:
  securitySchemes:
    api_key:
      type: apiKey
      in: query
      name: api_key
      description: API key required as a query parameter to authenticate requests.
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Enter your JWT bearer token to authenticate requests.
    session_id:
      type: apiKey
      in: query
      name: session_id
      description: Session ID required as a query parameter to authenticate requests.
  parameters:
    PageParameter:
      name: page
      in: query
      required: false
      description: Specify the page number for paginated results.
      schema:
        type: integer
        example: 1
    MovieIdPathParameter:
      name: movie_id
      in: path
      required: true
      description: The unique ID of the movie.
      schema:
        type: integer
        example: 541671
    ListIdPathParameter:
      name: list_id
      in: path
      required: true
      description: The unique ID of the list.
      schema:
        type: integer
        example: 8542348
  schemas:
    Movies:
      type: object
      properties:
        page:
          type: integer
          example: 1
        results:
          type: array
          items:
            type: object
            properties:
              adult:
                type: boolean
                example: false
              backdrop_path:
                type: string
                example: "/x58Gk2ZGU5AEBp25MQe2nhZhd5z.jpg"
              genre_ids:
                type: array
                items:
                  type: integer
                example: [28, 14]
              id:
                type: integer
                example: 846422
              original_language:
                type: string
                example: "en"
              original_title:
                type: string
                example: "The Old Guard 2"
              overview:
                type: string
                example: "Andy and her team of immortal warriors fight with renewed purpose as they face a powerful new foe threatening their mission to protect humanity."
              popularity:
                type: number
                format: float
                example: 617.5863
              poster_path:
                type: string
                example: "/wqfu3bPLJaEWJVk3QOm0rKhxf1A.jpg"
              release_date:
                type: string
                format: date
                example: "2025-07-01"
              title:
                type: string
                example: "The Old Guard 2"
              video:
                type: boolean
                example: false
              vote_average:
                type: number
                format: float
                example: 6.2
              vote_count:
                type: integer
                example: 363
        total_pages:
          type: integer
          example: 51345
        total_results:
          type: integer
          example: 1026899
    UpcomingMovies:
      type: object
      properties:
        dates:
          type: object
          properties:
            maximum:
              type: string
              format: date
              example: "2025-08-06"
            minimum:
              type: string
              format: date
              example: "2025-07-16"
        page:
          type: integer
          example: 1
        results:
          type: array
          items:
            type: object
            properties:
              adult:
                type: boolean
                example: false
              backdrop_path:
                type: string
                example: "/zViRwl3ySscZnbXZJ2Q9wq3SeUG.jpg"
              genre_ids:
                type: array
                items:
                  type: integer
                example: [16, 878, 12, 10751]
              id:
                type: integer
                example: 698687
              original_language:
                type: string
                example: "en"
              original_title:
                type: string
                example: "Transformers One"
              overview:
                type: string
                example: "The untold origin story of Optimus Prime and Megatron, better known as sworn enemies, but once were friends bonded like brothers who changed the fate of Cybertron forever."
              popularity:
                type: number
                format: float
                example: 18.261
              poster_path:
                type: string
                example: "/iRCgqpdVE4wyLQvGYU3ZP7pAtUc.jpg"
              release_date:
                type: string
                format: date
                example: "2024-09-11"
              title:
                type: string
                example: "Transformers One"
              video:
                type: boolean
                example: false
              vote_average:
                type: number
                format: float
                example: 8.073
              vote_count:
                type: integer
                example: 1302
        total_pages:
          type: integer
          example: 43
        total_results:
          type: integer
          example: 843
    MovieChanges:
      type: object
      properties:
        changes:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
                example: "alternative_titles"
              items:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "686e31940ad7681110ed6369"
                    action:
                      type: string
                      example: "added"
                    time:
                      type: string
                      format: date-time
                      example: "2025-07-09 09:08:36 UTC"
                    iso_639_1:
                      type: string
                      example: ""
                    iso_3166_1:
                      type: string
                      example: "UA"
                    value:
                      type: object
                      properties:
                        title:
                          type: string
                          example: "Глави держав"
                        type:
                          type: string
                          example: ""
                        iso_3166_1:
                          type: string
                          example: "UA"
    MovieDetails:
      type: object
      properties:
        adult:
          type: boolean
          example: false
        backdrop_path:
          type: string
          example: "/sItIskd5xpiE64bBWYwZintkGf3.jpg"
        belongs_to_collection:
          type: object
          nullable: true
          properties:
            id:
              type: integer
              example: 1494663
            name:
              type: string
              example: "Ballerina Collection"
            poster_path:
              type: string
              example: "/xzAyYTHqWtLmqtscUr8cZqaP7lu.jpg"
            backdrop_path:
              type: string
              nullable: true
              example: null
        budget:
          type: integer
          example: 90000000
        genres:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 28
              name:
                type: string
    MovieLists:
      type: object
      properties:
        id:
          type: integer
          example: 846422
        page:
          type: integer
          example: 1
        results:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                example: ""
              favorite_count:
                type: integer
                example: 0
              id:
                type: integer
                example: 8530523
              item_count:
                type: integer
                example: 16
              iso_639_1:
                type: string
                example: "en"
              iso_3166_1:
                type: string
                example: "US"
              list_type:
                type: string
                example: "movie"
              name:
                type: string
                example: "sifou3 "
              poster_path:
                type: string
                nullable: true
                example: null
        total_pages:
          type: integer
          example: 10
        total_results:
          type: integer
          example: 198
    LatestMovie:
      type: object
      properties:
        adult:
          type: boolean
          example: false
        backdrop_path:
          type: string
          nullable: true
          example: null
        belongs_to_collection:
          type: object
          nullable: true
          example: null
        budget:
          type: integer
          example: 0
        genres:
          type: array
          items:
            type: object
          example: []
        homepage:
          type: string
          example: ""
        id:
          type: integer
          example: 1511648
        imdb_id:
          type: string
          nullable: true
          example: null
        origin_country:
          type: array
          items:
            type: string
          example: ["CN"]
        original_language:
          type: string
          example: "zh"
        original_title:
          type: string
          example: "祈愿"
        overview:
          type: string
          example: |
            Three years epidemic later, many villages and towns in Sichuan Province began to resume traditional cultural activities-Temple fairs.
            For thousands of years, villagers usually thanked various gods by inviting opera troupe to sing and through asking the divinatory symbols to dream,
            making and returning wishes with inductive ways to interact with the gods.
            In the clouds of incense and fire, pray for their own worldly interests to be realized, but also obtain spiritual comfort.
        popularity:
          type: number
          format: float
          example: 0.0
        poster_path:
          type: string
          nullable: true
          example: null
        production_companies:
          type: array
          items:
            type: object
          example: []
        production_countries:
          type: array
          items:
            type: object
          example: []
        release_date:
          type: string
          format: date
          example: "2024-01-01"
        revenue:
          type: integer
          example: 0
        runtime:
          type: integer
          example: 30
        spoken_languages:
          type: array
          items:
            type: object
          example: []
        status:
          type: string
          example: "Released"
        tagline:
          type: string
          example: ""
        title:
          type: string
          example: "Praying"
        video:
          type: boolean
          example: false
        vote_average:
          type: number
          format: float
          example: 0.0
        vote_count:
          type: integer
          example: 0
    Error:
      type: object
      properties:
        status_code:
          type: integer
          example: 400
          description: HTTP status code indicating the type of error.
        status_message:
          type: string
          example: "Bad Request. The request was invalid or cannot be otherwise served."
          description: A human-readable description of the error.
        success:
          type: boolean
          example: false
          description: Indicates if the request was successful. Always false for errors.
  examples:
    MoviesExample:
      summary: Example of Movies response
      value:
        page: 1
        results:
          - adult: false
            backdrop_path: "/x58Gk2ZGU5AEBp25MQe2nhZhd5z.jpg"
            genre_ids: [28, 14]
            id: 846422
            original_language: "en"
            original_title: "The Old Guard 2"
            overview: "Andy and her team of immortal warriors fight with renewed purpose as they face a powerful new foe threatening their mission to protect humanity."
            popularity: 617.5863
            poster_path: "/wqfu3bPLJaEWJVk3QOm0rKhxf1A.jpg"
            release_date: "2025-07-01"
            title: "The Old Guard 2"
            video: false
            vote_average: 6.2
            vote_count: 363
        total_pages: 51345
        total_results: 1026899
    UpcomingMoviesExample:
      summary: Example of Upcoming Movies response
      value:
        dates:
          maximum: "2025-08-06"
          minimum: "2025-07-16"
        page: 1
        results:
          - adult: false
            backdrop_path: "/zViRwl3ySscZnbXZJ2Q9wq3SeUG.jpg"
            genre_ids: [16, 878, 12, 10751]
            id: 698687
            original_language: "en"
            original_title: "Transformers One"
            overview: "The untold origin story of Optimus Prime and Megatron, better known as sworn enemies, but once were friends bonded like brothers who changed the fate of Cybertron forever."
            popularity: 18.261
            poster_path: "/iRCgqpdVE4wyLQvGYU3ZP7pAtUc.jpg"
            release_date: "2024-09-11"
            title: "Transformers One"
            video: false
            vote_average: 8.073
            vote_count: 1302
        total_pages: 43
        total_results: 843
    MovieChangesExample:
      summary: Example of Movie Changes response
      value:
        changes:
          - key: "alternative_titles"
            items:
              - id: "686e31940ad7681110ed6369"
                action: "added"
                time: "2025-07-09 09:08:36 UTC"
                iso_639_1: ""
                iso_3166_1: "UA"
                value:
                  title: "Глави держав"
                  type: ""
                  iso_3166_1: "UA"
    MovieDetailsExample:
      summary: Example of Movie Details response
      value:
        adult: false
        backdrop_path: "/sItIskd5xpiE64bBWYwZintkGf3.jpg"
        belongs_to_collection:
          id: 1494663
          name: "Ballerina Collection"
          poster_path: "/xzAyYTHqWtLmqtscUr8cZqaP7lu.jpg"
          backdrop_path: null
        budget: 90000000
        genres:
          - id: 28
            name: "Action"
    MovieListsExample:
      summary: Example of Movie Lists response
      value:
        id: 846422
        page: 1
        results:
          - description: ""
            favorite_count: 0
            id: 8530523
            item_count: 16
            iso_639_1: "en"
            iso_3166_1: "US"
            list_type: "movie"
            name: "sifou3 "
            poster_path: null
        total_pages: 10
        total_results: 198
    LatestMovieExample:
      summary: Example of Latest Movie response
      value:
        adult: false
        backdrop_path: null
        belongs_to_collection: null
        budget: 0
        genres: []
        homepage: ""
        id: 1511648
        imdb_id: null
        origin_country: ["CN"]
        original_language: "zh"
        original_title: "祈愿"
        overview: |
          Three years epidemic later, many villages and towns in Sichuan Province began to resume traditional cultural activities-Temple fairs.
          For thousands of years, villagers usually thanked various gods by inviting opera troupe to sing and through asking the divinatory symbols to dream,
          making and returning wishes with inductive ways to interact with the gods.
          In the clouds of incense and fire, pray for their own worldly interests to be realized, but also obtain spiritual comfort.
        popularity: 0.0
        poster_path: null
        production_companies: []
        production_countries: []
        release_date: "2024-01-01"
        revenue: 0
        runtime: 30
        spoken_languages: []
        status: "Released"
        tagline: ""
        title: "Praying"
        video: false
        vote_average: 0.0
        vote_count: 0
    RatingRequestExample:
      summary: Example Movie Rating Request Body
      value:
        value: 8
    RatingSuccessResponseExample:
      summary: Example Movie Rating Success Response
      value:
        success: true
        status_code: 12
        status_message: "The item/record was updated successfully."
    ItemStatusResponseExample:
      summary: Example Item Status Response
      value:
        id: "8542348"
        item_present: false
    CreateListRequestExample:
      summary: Example Create List Request Body
      value:
        name: "My Favourite Shows"
        iso_639_1: "en"
        description: "This is a list of my favourite TV shows and movies."
    CreateListSuccessResponseExample:
      summary: Example Create List Success Response
      value:
        success: true
        status_code: 1
        status_message: "Success."
        list_id: 8542396
    AddItemRequestExample:
      summary: Example Add Item to List Request Body
      value:
        media_id: 551
    AddItemSuccessResponseExample:
      summary: Example Add Item to List Success Response
      value:
        success: true
        status_code: 12
        status_message: "The item/record was updated successfully."
    ErrorExample:
      summary: Bad Request Error Response
      value:
        status_code: 400
        status_message: "Bad Request. The request was invalid or cannot be otherwise served."
        success: false
